lock => 읽기나 쓰기시 데이터 침범을 막는다.
read lock은 공유될 수 있으나
read lock시 write lock 불가능하며
write lock시 read/write lock 획득 불가능.

==============

lock 만으로는 이상한 현상 발생가능성이 있으므로,
tx에서 모든 locking operation이 최초의 unlock operation 보다 먼저 수행되도록하는
2PL protocol을 해야한다.

expanding phase : lock을 취득만 하고 반환하지는 않는 phase
shirinking phase: lock을 반환만 하고 취득하지 않는 phase
로 구분.

=> 이는 serialiability를 보장.

=======>> 이 경우 OS처럼 deadlock발생가능성이 생겨 이를 예방하거나 발생시 회복하도록해야함.


===============

conservative 2PL => 모든 lock을 취득한 뒤 transaction을 시작, deadlock-free, 실용적이진 않
strict 2PL => (S2PL) strict schedule을 보장하는 2PL, recoverability 보장, write-lock을 commit/rollback시 반환
strong strict 2PL => strict 2PL과 같지만 writelock 뿐만 아니라 readlock도 commit/rollback될때 반환(SS2PL보다 구현이 쉽다)

> 전체처리량이 좋지 않다. 그래서 MVCC가 등장함.