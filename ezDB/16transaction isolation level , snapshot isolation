가령 tx동시실행에 대하여 가능한경우
x= 10, y =20
transaction1
x + y
transaction2
y = 70

tx1
read x = 10
tx2
write y =70
read y = 70
write x = 80
tx1 commit
tx2 abort:rollback y = 20



=>Dirty read
commit되지 않은 변화를 읽음

==============

x = 50
tx1 : x 2번 읽기
tx2 : x + 40

tx1 read x = 10
tx2 read x = 10
tx2 write x = 50
tx2 commit
tx1 read x = 50
commit

=> Non-repeatable read
같은 데이터의 값이 달라짐 isolation법칙이 어긋

===================

t1(v = 10)
t2(v = 20)
tx1 v = 10 인 데이터 두번 읽기
tx2 v2의 값 10으로 바꾸기

tx1 read v=10 => t1
tx2 write(t2.v=10)
tx2 commit
tx1 read v= 10 =>t1,t2
commit

=> Phantomread
없던 데이터가 생겨버림. 독립적으로 실행되지 못해 이 또한 isolation법칙에 어긋남


=================
상기 세 현상을 모두 막으면 DB처리에 대한 트랙잭션의 동시처리수가 줄어 처리량이 하락된다.
이를 해결하기 위해 어느정도 현상을 허용하도록하는 것에 대해 isolation level 등장

isolation level dirtyread non-repeatableread phantomread
read uncommitted o  o  o
read committed x  o  o
repeatable read x  x  o
serializable x  x  x

=======================
추가 이상현상

x =0
tx1 : x = 10
tx2 : x = 100

tx1 write x = 10
tx2 write x = 100
tx1 abort(롤백을 위해 중단했지만 롤백은안함)
tx2 abort:rollback
=> 이러면 x=0 이 아닌 10이나옴
이를 Dirty write
commit안된 데이터를 write

rollback시 정상적인 recovery는 매우 중요하므로 모든 isolaltion level에서 dirty write는 허용되어선 안된다.

===========================

lost update
데이터를 더해서 커밋되는 사이에 데이터가 더해지고 커밋이 되어버리면 중간의 커밋된 데이터를 사라짐.

========================

x,y - 50
tx1 x-40 , y+40
tx2 read x,y

tx2 read x =50
tx1 read x = 50
tx2 write x = 10
tx2 read y = 50
tx2 write y = 90
commit
tx2 read y = 90

=> Read skew
inconsistenct 한 데이터 읽기(다른 데이터들을 읽었는데 총 합이 달라지는것으로 nonrepeatable read와 차이인듯)

=======================

x,y = 50
tx1 x-80
tx2 y-90
tx1 read x = 50
tx1 read y = 50
tx2 read x = 50
tx2 read y = 50
write x = -30
write y = -40
tx1 commit
tx2 commit

=> write skew
inconsistencet한 데이터 쓰기

===============

Snapshot isolation
=> commit전까지는 스냅샷으로 관리되고 commit되면 db에 적용되며
하기와 같이 write write가 적용되는 경우에는 먼저 commit된 건만 적용되고 이후 커밋된 건에 대해서는 abort진행

>mvcc의 한 종류로 tx 시작전 commit된 데이터만 보임.

x = 50, y = 50
tx1 x-40 , y + 40
tx2 y +100

tx1 read x = 50
tx1 write x = 10
tx2 read y = 50
tx2 write y = 150
commit

read y = 50
write y = 90
abort

